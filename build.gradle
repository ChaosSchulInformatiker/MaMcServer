/*import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTargetWithTests

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.21'
}

group = 'org.q11mk'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

kotlin {
    //def hostOs = System.getProperty("os.name")
    //def isMingwX64 = hostOs.startsWith("Windows")
    //KotlinNativeTargetWithTests nativeTarget
    //if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    //else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    //else if (isMingwX64) nativeTarget = mingwX64("native")
    //else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    mingwX64("native").with {
        binaries {
            executable {
                entryPoint = 'main'
            }
        }
    }
    sourceSets {
        nativeMain {
            implementation "io.ktor:ktor-server-core:1.5.0"
        }
        nativeTest {

        }
    }
}*/

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'
}

group = 'org.q11mk'
version = '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
    kotlinOptions {
        freeCompilerArgs = ["-Xinline-classes", "-Xopt-in=kotlin.ExperimentalUnsignedTypes"]
    }
}

ext {
    ktorVersion = '1.5.0'
    spigotVersion = '1.16.5-R0.1-SNAPSHOT'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation "io.ktor:ktor-server-core:$ktorVersion"
    implementation "io.ktor:ktor-server-netty:$ktorVersion"
    implementation "io.ktor:ktor-network:$ktorVersion"

    compileOnly "org.spigotmc:spigot-api:$spigotVersion"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}